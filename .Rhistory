### Make graphs
g84 <- PredationMatrix(TL84) %>% graph.adjacency()
g86 <- PredationMatrix(TL86) %>% graph.adjacency()
## Species names
# from union of 84 and 86 networks
sp.names <- graph.union(g84, g86) %>% get.adjacency(sparse = F) %>% colnames
#write.csv(sp.names, file = "data/TL_species.csv")
#sp.cl <- classification(sp.names, db = "itis")
#sp.cl[is.na(sp.cl)] <- classification(names(sp.cl[is.na(sp.cl)]), db = "gbif")
#save(sp.cl, file = "data/TL_species_class.Rdata")
##
#  Link structure and dynamics
##
spp <- read.csv("./data/TL_empirical_species.csv", row.names = 1)
TLg <- graph.union(g84, g86)
aTL <- get.adjacency(TLg, sparse = F)
zoop.stat <- read.csv("./time_series_stats/ts_stats_zoop_all_yr.csv", row.names = 1)
# common names between two datasets
inDAT <- intersect(rownames(zoop.stat), rownames(aTL))
#trophic position and omnivory index
TL.troph <- TrophInd(aTL)[inDAT,]
#degree
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
# zooDAT is a dataframe of zooplankton data
zooDAT <- cbind(zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
getwd()
spp <- read.csv("./data/TL_empirical_species.csv", row.names = 1)
zoop.stat <- read.csv("./time_series_stats/ts_stats_zoop_all_yr.csv", row.names = 1)
zoop.stat <- read.csv("./time_series_stats/ts_stats_TL_zoop_all_yr.csv", row.names = 1)
# common names between two datasets
inDAT <- intersect(rownames(zoop.stat), rownames(aTL))
#trophic position and omnivory index
TL.troph <- TrophInd(aTL)[inDAT,]
#degree
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
# zooDAT is a dataframe of zooplankton data
zooDAT <- cbind(zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
zooDAT
TL.phyto.stat <- read.csv("./time_series_stats/ts_stats_TL_phyto_all_yr.csv")
TL.phyto.stat
inDATphyto <- intersect(rownames(TL.phyto.stat), rownames(aTL))
inDATphyto
rownames(TL.phyto.stat)
inDATphyto <- intersect(TL.phyto.stat[,1], rownames(aTL))
inDATphyto
TL.troph.p <- TrophInd(aTL)[inDATphyto,]
TL.troph.p
indeg <- degree(graph = TLg, mode = "in")[inDATphyto]
outdeg <- degree(graph = TLg, mode = "out")[inDATphyto]
outdeg
indeg
#trophic position and omnivory index
TL.troph <- TrophInd(aTL)[inDAT,]
TL.troph.p <- TrophInd(aTL)[inDATphyto,]
#degree
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
indegP <- degree(graph = TLg, mode = "in")[inDATphyto]
outdegP <- degree(graph = TLg, mode = "out")[inDATphyto]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
vbetP <- betweenness(TLg)[inDATphyto]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
evcP <- evcent(graph = TLg)$vector[inDATphyto]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
prP <- page.rank(graph = TLg)$vector[inDATphyto]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
subcentP <- subgraph.centrality(graph = TLg)[inDATphyto]
# zooDAT is a dataframe of zooplankton data
zooDAT <- cbind(TL.zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
phytoDAT <- cbind(TL.zoop.stat[inDATphyto,], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
summary(prcomp(zooDAT[-10, -c(1:4)]))
TL.zoop.stat <- read.csv("./time_series_stats/ts_stats_TL_zoop_all_yr.csv", row.names = 1)
TL.phyto.stat <- read.csv("./time_series_stats/ts_stats_TL_phyto_all_yr.csv")
# common names between two datasets
inDAT <- intersect(rownames(TL.zoop.stat), rownames(aTL))
inDATphyto <- intersect(TL.phyto.stat[,1], rownames(aTL))
#trophic position and omnivory index
TL.troph <- TrophInd(aTL)[inDAT,]
TL.troph.p <- TrophInd(aTL)[inDATphyto,]
#degree
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
indegP <- degree(graph = TLg, mode = "in")[inDATphyto]
outdegP <- degree(graph = TLg, mode = "out")[inDATphyto]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
vbetP <- betweenness(TLg)[inDATphyto]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
evcP <- evcent(graph = TLg)$vector[inDATphyto]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
prP <- page.rank(graph = TLg)$vector[inDATphyto]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
subcentP <- subgraph.centrality(graph = TLg)[inDATphyto]
# zooDAT is a dataframe of zooplankton data
zooDAT <- cbind(TL.zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
phytoDAT <- cbind(TL.zoop.stat[inDATphyto,], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
phytoDAT
phytoDAT <- cbind(TL.phyto.stat[inDATphyto,], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
phytoDAT
inDATphyto
phytoDAT <- cbind(TL.phyto.stat[TL.phyto.stat[,1] == inDATphyto,], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
phytoDAT
zooDAT
phytoDAT <- cbind(TL.phyto.stat[TL.phyto.stat[,1] == inDATphyto, -1], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
rownames(phytoDAT) <- inDATphyto
phytoDAT
rbind(phytoDAT, zooDAT)
colnames(phytoDAT) <- colnames(zooDAT)
rbind(phytoDAT, zooDAT)
rbind(phytoDAT, zooDAT)
TL.data <- rbind(phytoDAT, zooDAT)
summary(prcomp(TL.data[-10, -c(1:4)]))
is.data.frame(TL.data)
cbind(TL.data, web = factor("TuesdayLake"))
TL.data <- cbind(TL.data, web = factor("TuesdayLake"))
TL.data <- rbind(phytoDAT, zooDAT)
TL.data <- cbind(web = factor("TuesdayLake"), TL.data)
TL.data
lr <- read.csv("./data/littlerock-edges.csv")
lr.spp <- read.csv("./data/LittleRockSpeciesList.csv")
# fix "nf" to "sp."
lr.spp$Species[lr.spp$Species=="nf" & lr.spp$Genus!="nf"] <- "sp."
# Add a genus,species column
lr.spp$taxa <- paste(lr.spp$Genus, lr.spp$Species, sep = " ")
lr.zoop <- read.csv("./data/LR_zoop_species.csv", row.names = 1)
lrg <- graph.edgelist(matrix(c(lr[,2], lr[,1]), ncol = 2))
alr <- get.adjacency(lrg, sparse = F)
alr.fix <- alr[-c(which(colSums(alr) == 0 & rowSums(alr) == 0)), -c(which(colSums(alr) == 0 & rowSums(alr) == 0))]
lrg <- graph.adjacency(alr.fix)
spp.names.lr <- paste(lr.spp$Genus, lr.spp$Species, sep = " ")
#trophic position and omnivory index
TL.troph.lr <- TrophInd(alr.fix)
#degree
indeg.lr <- degree(graph = lrg, mode = "in")
outdeg.lr <- degree(graph = lrg, mode = "out")
#centrality
## vertex betweenness
vbet.lr <- betweenness(lrg)
## eigenvector centrality
evc.lr <- evcent(graph = lrg)$vector
## google pagerank
pr.lr <- page.rank(graph = lrg)$vector
## subgraph centrality
subcent.lr <- subgraph.centrality(graph = lrg)
zooDAT.lr <- cbind(TL.troph.lr, indeg.lr, outdeg.lr, vbet.lr, evc.lr, pr.lr, subcent.lr)
zooDAT.lr
rownames(zooDAT.lr) <- spp.names.lr
zooDAT.lr <- cbind(spp.names.lr, zooDAT.lr)
zooDAT.lr
lr.zoop.stat <- read.csv("./time_series_stats/ts_stats_LR_zoop_all_yr.csv")
lr.zoop.stat
read.csv("./data/matching_LR_web.csv")
lr.zoop.stat$new_name
intersect(lr.zoop.stat$new_name, zooDAT.lr$spp.names.lr)
LR.names <- intersect(lr.zoop.stat$new_name, zooDAT.lr$spp.names.lr)
zooDAT.LR <- zooDAT.lr[LR.names,]
zooDAT.LR
zooDAT.LR <- zooDAT.lr[zooDAT.lr$spp.names.lr == LR.names,]
zooDAT.lr$spp.names.lr
zooDAT.LR <- zooDAT.lr[LR.names == zooDAT.lr$spp.names.lr,]
zooDAT.lr$spp.names.lr
LR.names == zooDAT.lr$spp.names.lr
LR.names %in$ zooDAT.lr$spp.names.lr
LR.names %in% zooDAT.lr$spp.names.lr
zooDAT.lr$spp.names.lr %in% LR.names
zooDAT.LR <- zooDAT.lr[zooDAT.lr$spp.names.lr %in% LR.names,]
zooDAT.LR
zooDAT.LR
zooDAT.LR[1,]
zooDAT.LR[,1]
LR.names
zooDAT.LR
sort(zooDAT.LR)
zooDAT.LR[with(zooDAT.LR, order(spp.names.lr))]
zooDAT.LR[with(zooDAT.LR, order(spp.names.lr)),]
zooDAT.LR <- zooDAT.lr[zooDAT.lr$spp.names.lr %in% LR.names,][with(zooDAT.LR, order(spp.names.lr)),]
zooDAT.LR
lr.zoop.stat
LR.data <- cbind(web = factor("LittleRock"), lr.zoop.stat[LR.names,2:5], zooDAT.Lr[,2:9])
LR.data <- cbind(web = factor("LittleRock"), lr.zoop.stat[LR.names,2:5], zooDAT.LR[,2:9])
rownames(LR.data) <- zooDAT.LR[,1]
LR.data
LR.data <- cbind(web = factor("LittleRock"), lr.zoop.stat[lr.zoop.stat$spp.names == LR.names,2:5], zooDAT.LR[,2:9])
LR.data <- cbind(web = factor("LittleRock"), lr.zoop.stat[lr.zoop.stat$new_name.lr %in% LR.names,2:5], zooDAT.LR[,2:9])
lr.zoop.stat$new_name.lr %in% LR.names
lr.zoop.stat$new_name
lr.zoop.stat$new_name %in% LR.names
LR.data <- cbind(web = factor("LittleRock"), lr.zoop.stat[lr.zoop.stat$new_name %in% LR.names,2:5], zooDAT.LR[,2:9])
LR.data
rownames(LR.data) <- zooDAT.LR[,1]
LR.data
library(rnetcarto)
library(cheddar)
library(magrittr)
library(taxize)
library(igraph)
library(NetIndices)
library(rnetcarto)
motif_counter <- function(graph.lists){
require(igraph)
if(!is.list(graph.lists)){
stop("The input should be a list of graph objects")
}
triad.count <- lapply(graph.lists, triad.census)
triad.matrix <- matrix(unlist(triad.count), nrow = length(graph.lists), ncol = 16, byrow = T)
colnames(triad.matrix) <- c("empty", "single", "mutual", "s5", "s4", "s1", "d4",
"d3", "s2", "s3","d8", "d2", "d1", "d5", "d7", "d6")
triad.df <- as.data.frame(triad.matrix)
motif.data.frame <- data.frame(s1 = triad.df$s1, s2 = triad.df$s2, s3 = triad.df$s3, s4 = triad.df$s4,
s5 = triad.df$s5, d1 = triad.df$d1, d2 = triad.df$d2, d3 = triad.df$d3, d4 = triad.df$d4,
d5 = triad.df$d5, d6 = triad.df$d6, d7 = triad.df$d7, d8 = triad.df$d8)
return(motif.data.frame)
}
### Jacknife species to get list of subgraphs
listROLES <- function(x){
lam <- list()
for(i in 1:nrow(x)){
lam[[i]] <- x[-i,-i]
}
qgs <- lapply(lam, graph.adjacency)
m.each <- motif_counter(qgs)
m.all <- motif_counter(list(graph.adjacency(x)))
m2 <- matrix(nrow = nrow(m.each), ncol = 13)
for(i in 1:nrow(m.each)){
m2[i,] <- as.numeric(m.all - m.each[i,])
}
return(as.data.frame(m2))
}
## Data
data(TL84)
data(TL86)
### Make graphs
g84 <- PredationMatrix(TL84) %>% graph.adjacency()
g86 <- PredationMatrix(TL86) %>% graph.adjacency()
## Species names
# from union of 84 and 86 networks
sp.names <- graph.union(g84, g86) %>% get.adjacency(sparse = F) %>% colnames
#write.csv(sp.names, file = "data/TL_species.csv")
#sp.cl <- classification(sp.names, db = "itis")
#sp.cl[is.na(sp.cl)] <- classification(names(sp.cl[is.na(sp.cl)]), db = "gbif")
#save(sp.cl, file = "data/TL_species_class.Rdata")
##
#  Link structure and dynamics
##
spp <- read.csv("./data/TL_empirical_species.csv", row.names = 1)
TLg <- graph.union(g84, g86)
aTL <- get.adjacency(TLg, sparse = F)
TL.zoop.stat <- read.csv("./time_series_stats/ts_stats_TL_zoop_all_yr.csv", row.names = 1)
TL.phyto.stat <- read.csv("./time_series_stats/ts_stats_TL_phyto_all_yr.csv")
# common names between two datasets
inDAT <- intersect(rownames(TL.zoop.stat), rownames(aTL))
inDATphyto <- intersect(TL.phyto.stat[,1], rownames(aTL))
#trophic position and omnivory index
TL.troph <- TrophInd(aTL)[inDAT,]
TL.troph.p <- TrophInd(aTL)[inDATphyto,]
#degree
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
indegP <- degree(graph = TLg, mode = "in")[inDATphyto]
outdegP <- degree(graph = TLg, mode = "out")[inDATphyto]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
vbetP <- betweenness(TLg)[inDATphyto]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
evcP <- evcent(graph = TLg)$vector[inDATphyto]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
prP <- page.rank(graph = TLg)$vector[inDATphyto]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
subcentP <- subgraph.centrality(graph = TLg)[inDATphyto]
# zooDAT is a dataframe of zooplankton data
zooDAT <- cbind(TL.zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
phytoDAT <- cbind(TL.phyto.stat[TL.phyto.stat[,1] == inDATphyto, -1], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
rownames(phytoDAT) <- inDATphyto
colnames(phytoDAT) <- colnames(zooDAT)
TL.data <- rbind(phytoDAT, zooDAT)
TL.data <- cbind(web = factor("TuesdayLake"), TL.data)
inDAT
inDATphyto
TL.data
zooDAT
inDAT
netcarto(TLg)
netcarto(graph.adjacency(TLg, sparse = F))
netcarto(get.adjacency(TLg, sparse = F))
?netcarto
nc.mod <- netcarto(get.adjacency(TLg, sparse = F))
get.edgelist(TLg)
netcarto(get.edgelist(TLg))
nc.mod <- netcarto(list(get.edgelist(TLg)))
nc.mod <- netcarto(list(get.edgelist(TLg), 0))
nc.mod <- netcarto(list(get.edgelist(TLg), rep(0, 401)))
nc.mod <- netcarto(get.adjacency(TLg, sparse = F))
nc.mod[inDAT]
nc.mod[inDAT,]
nc.mod
nc.mod$name == inDAT
nc.mod$name[inDAT]
nc.mod$name %in% inDAT
nc.mod$name
nc.mod[[1]]$name %in% inDAT
nc.mod[[1]]$name[inDAT]
nc.mod[[1]][nc.mod[[1]]$name %in% inDAT]
nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]
nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name
inDAT
order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,])
order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name)
sort(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name)
nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,][sort(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name),]
nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name),]
inDATphyto.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,]$name),]
inDATphyto.mod
inDATphyto
nc.mod
V(TLg)
row.names(get.adjacency(Tlg))
row.names(get.adjacency(TLg))
nc.mod[[1]]$name
conversion <- function(tm){
for(i in 1:nrow(tm)){
for(j in 1:ncol(tm)){
if(tm[i,j] == 1){tm[j,i] <- -1}
}
}
return(tm)
}
conversion(aTL)
abs(conversion(aTL))
symTL <- abs(conversion(aTL))
nc.mod <- netcarto(symTL)
inDAT.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name),]
inDATphyto.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,]$name),]
nc.mod
inDAT.mod
dim(inDAT.mod)
dim(inDATphyto.mod)
length(inDATphyto)
nc.mod[[1]]$name %in% inDATphyto
nc.mod
dim(nc.mod[[1]])
inDATphyto
inDATphyto.mod
TL.data
rownames(TL.data)
nc.mod[[1]]$name
nc.mod[[1]]$name %in% rownames(TL.data)
rownames(TL.data) %in% nc.mod[[1]]$name
inDAT.mod <- nc.mod[[1]][inDAT %in% nc.mod[[1]]$name,][order(nc.mod[[1]][inDAT %in% nc.mod[[1]]$name,]$name),]
inDATphyto.mod <- nc.mod[[1]][inDATphyto %in% nc.mod[[1]]$name,][order(nc.mod[[1]][inDATphyto %in% nc.mod[[1]]$name,]$name),]
inDAT.mod
length(inDAT)
inDAT
nc.mod[[1]][inDAT %in% nc.mod[[1]]$name,]
nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]
inDAT.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name),]
inDAT.mod
dim(inDAT.mod)
inDATphyto.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,]$name),]
inDATphyto.mod
symTL
row.names(symTL)
symTL[30,]
sum(symTL[30,])
sum(symTL[,30])
which.max(symTL[,30])
which.max(symTL[30,])
nc.mod
nc.mod[[1]]$names
nc.mod[[1]]$name
length(nc.mod[[1]]$name)
dim(symTL)
colSums(symTL)
rowSums(symTL)
symTL[30,]
row.names(symTL[30,])
row.names(symTL)
row.names(symTL[75,])
symTL[75,]
sum(symTL[75,])
sum(symTL[,75])
sum(aTL[,75])
sum(aTL[75,])
PredationMatrix(TL84)
PredationMatrix(TL86)
row.names(PredationMatrix(TL86))
sum(PredationMatrix(TL86)[35,])
sum(PredationMatrix(TL86)[,35])
colSums(aTL) == 0 & rowSums(aTL) == 0
which(colSums(aTL) == 0 & rowSums(aTL) == 0)
unconnected <- which(colSums(aTL) == 0 & rowSums(aTL) == 0)
aTL <- aTL[-unconnected, -unconnected]
inDAT <- intersect(rownames(TL.zoop.stat), rownames(aTL))
inDATphyto <- intersect(TL.phyto.stat[,1], rownames(aTL))
TL.troph <- TrophInd(aTL)[inDAT,]
TL.troph.p <- TrophInd(aTL)[inDATphyto,]
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
indegP <- degree(graph = TLg, mode = "in")[inDATphyto]
outdegP <- degree(graph = TLg, mode = "out")[inDATphyto]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
vbetP <- betweenness(TLg)[inDATphyto]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
evcP <- evcent(graph = TLg)$vector[inDATphyto]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
prP <- page.rank(graph = TLg)$vector[inDATphyto]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
subcentP <- subgraph.centrality(graph = TLg)[inDATphyto]
## modularity
symTL <- abs(conversion(aTL))
nc.mod <- netcarto(symTL)
inDAT.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name),]
inDATphyto.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,]$name),]
inDATphyto
inDATphyto.mod
phytoDAT
zooDAT <- cbind(TL.zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
phytoDAT <- cbind(TL.phyto.stat[TL.phyto.stat[,1] == inDATphyto, -1], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
rownames(phytoDAT) <- inDATphyto
zooDAT
inDAT.mod
phytoDAT
inDATphyto
TLg <- graph.adjacency(aTL)
inDAT <- intersect(rownames(TL.zoop.stat), rownames(aTL))
inDATphyto <- intersect(TL.phyto.stat[,1], rownames(aTL))
#trophic position and omnivory index
TL.troph <- TrophInd(aTL)[inDAT,]
TL.troph.p <- TrophInd(aTL)[inDATphyto,]
#degree
indeg <- degree(graph = TLg, mode = "in")[inDAT]
outdeg <- degree(graph = TLg, mode = "out")[inDAT]
indegP <- degree(graph = TLg, mode = "in")[inDATphyto]
outdegP <- degree(graph = TLg, mode = "out")[inDATphyto]
#centrality
## vertex betweenness
vbet <- betweenness(TLg)[inDAT]
vbetP <- betweenness(TLg)[inDATphyto]
## eigenvector centrality
evc <- evcent(graph = TLg)$vector[inDAT]
evcP <- evcent(graph = TLg)$vector[inDATphyto]
## google pagerank
pr <- page.rank(graph = TLg)$vector[inDAT]
prP <- page.rank(graph = TLg)$vector[inDATphyto]
## subgraph centrality
subcent <- subgraph.centrality(graph = TLg)[inDAT]
subcentP <- subgraph.centrality(graph = TLg)[inDATphyto]
## modularity
symTL <- abs(conversion(aTL))
nc.mod <- netcarto(symTL)
inDAT.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDAT,]$name),]
inDATphyto.mod <- nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,][order(nc.mod[[1]][nc.mod[[1]]$name %in% inDATphyto,]$name),]
# zooDAT is a dataframe of zooplankton data
zooDAT <- cbind(TL.zoop.stat[inDAT,], TL.troph, indeg, outdeg, vbet, evc, pr, subcent)
phytoDAT <- cbind(TL.phyto.stat[TL.phyto.stat[,1] == inDATphyto, -1], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
rownames(phytoDAT) <- inDATphyto
colnames(phytoDAT) <- colnames(zooDAT)
TL.phyto.stat
TL.phyto.stat[,1] == inDATphyto
TL.phyto.stat[,1] %in% inDATphyto
TL.phyto.stat[TL.phyto.stat[,1] %in% inDATphyto, 1]
inDATphyto
phytoDAT <- cbind(TL.phyto.stat[TL.phyto.stat[,1] %in% inDATphyto, -1], TL.troph.p, indegP, outdegP, vbetP, evcP, prP, subcentP)
rownames(phytoDAT) <- inDATphyto
colnames(phytoDAT) <- colnames(zooDAT)
TL.data <- rbind(phytoDAT, zooDAT)
TL.data <- cbind(web = factor("TuesdayLake"), TL.data)
TL.data
inDATphyto.mod[,-1]
TL.data <- data.frame(rbind(phytoDAT, zooDAT), rbind(inDATphyto.mod[,-1], inDAT.mod[,-1]))
TL.data
TL.data <- cbind(web = factor("TuesdayLake"), TL.data)
TL.data
boxplot(avg_dens~role, data = TL.data)
boxplot(cv_dens~role, data = TL.data)
